plugins {
	id 'org.springframework.boot' version '2.5.7'
	id 'io.spring.dependency-management' version '1.0.0.RELEASE'
	id 'java'
	id 'com.google.cloud.tools.jib'
	id 'checkstyle'
	id 'jacoco'
	id 'com.avast.gradle.docker-compose' version '0.14.0'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

apply from: "${rootDir}/gradle/openapi-tools/server.gradle"
apply from: "${rootDir}/gradle/code-quality.gradle"

def mapstructVersion = '1.4.2.Final'

configurations {
	compileOnly.extendsFrom annotationProcessor
}

dependencies {
	// Boiler plate dependencies:
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
	compileOnly 'com.google.code.findbugs:annotations:3.0.1'
	compileOnly 'org.springframework.boot:spring-boot-devtools'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.vladmihalcea:hibernate-types-52:2.16.1'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.json:json:20220320'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'com.google.firebase:firebase-admin:8.1.0'

	implementation 'com.google.cloud:spring-cloud-gcp-starter-secretmanager:2.0.10' // Tied to SpringBoot 2.5.7
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.0'

	// Database management
	implementation 'com.google.cloud.sql:postgres-socket-factory:1.5.0'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2:2.1.210'
	implementation 'org.liquibase:liquibase-core'

	// Auth Helpers
	implementation 'com.auth0:java-jwt:3.19.1'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.6.6'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Testing
	implementation 'org.avaje.composite:junit:5.1'
	implementation 'org.mockito:junit-jupiter:2.20.0'
	implementation 'org.mockito:mockito-core:4.4.0'
	implementation 'org.springframework.security:spring-security-test:5.6.2'
	testImplementation "org.mockito:mockito-inline:3.11.2"
}

// dockerCompose plugin: https://github.com/avast/gradle-docker-compose-plugin
dockerCompose {
	projectName = rootProject.name
	dockerComposeWorkingDirectory = project.file(project.getRootDir().toString())
	tcpPortsToIgnoreWhenWaiting = [5439]
}

composeUp.dependsOn build

test {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.compilerArgs = [
			'-Amapstruct.suppressGeneratorTimestamp=true'
	]
}

jib {
	container {
		jvmFlags = ['-Dspring.profiles.active=deployment']
	}
}

bootRun {
	systemProperties = System.properties
	systemProperty 'spring.profiles.active', findProperty('profile') ?: 'local'
}
